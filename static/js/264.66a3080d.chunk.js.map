{"version":3,"file":"static/js/264.66a3080d.chunk.js","mappings":"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","sources":["components/MoviesList.jsx","pages/Home.jsx","services/fetchMovies.js","services/imagesConfigurations.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport imagesConfigurations from \"services/imagesConfigurations\";\r\nimport noPoster from \"imgs/noPoster.webp\";\r\n\r\nfunction MoviesList({ list }) {\r\n  const location = useLocation();\r\n  const linkTo = location.pathname.includes(\"movies\") ? \"\" : \"/movies/\";\r\n  const { images } = imagesConfigurations;\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {list.map(\r\n          ({\r\n            id,\r\n            // backdrop_path,\r\n            poster_path,\r\n            original_language,\r\n            original_title,\r\n            release_date,\r\n            vote_average,\r\n          }) => (\r\n            <li key={id}>\r\n              {/* <p>\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500/${backdrop_path}`}\r\n                  alt={`Poster of ${original_title} movie`}\r\n                />\r\n              </p> */}\r\n              <p>\r\n                <img\r\n                  src={\r\n                    poster_path\r\n                      ? `${images.secure_base_url}w500/${poster_path}`\r\n                      : noPoster\r\n                  }\r\n                  alt={`Poster of ${original_title} movie`}\r\n                />\r\n              </p>\r\n              <p>Language: {original_language}</p>\r\n              <p>\r\n                Title:\r\n                <Link to={`${linkTo}${id}`} state={{ from: location }}>\r\n                  {original_title}\r\n                </Link>\r\n              </p>\r\n              <p>Release date: {release_date}</p>\r\n              <p>TMDB rating: {vote_average},</p>\r\n            </li>\r\n          ),\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesList;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\r\n\r\nimport fetchMovies from \"services/fetchMovies\";\r\nimport MoviesList from \"components/MoviesList\";\r\n\r\nNotify.init({\r\n  width: \"300px\",\r\n  position: \"right-bottom\",\r\n  timeout: 2000,\r\n  clickToClose: false,\r\n  cssAnimationStyle: \"from-right\",\r\n});\r\n\r\nfunction Home() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // http запит за популярними фільмами\r\n    async function fetchPopularMovies() {\r\n      const timeWindow = \"day\"; // \"day\" or \"week\"\r\n      const currentRequestUrl = `trending/movie/${timeWindow}`;\r\n\r\n      const result = await fetchMovies(currentRequestUrl);\r\n\r\n      if (result.data.results.length === 0) {\r\n        Notify.warning(\"We don't have any movies now. Sorry.\");\r\n        return;\r\n      }\r\n\r\n      setMovies(result.data.results);\r\n    }\r\n\r\n    try {\r\n      fetchPopularMovies();\r\n    } catch (error) {\r\n      Notify.failure(error.message);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Home</h1>\r\n      {movies && <MoviesList list={movies} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\r\n\r\nNotify.init({\r\n  width: \"300px\",\r\n  position: \"right-bottom\",\r\n  // timeout: 2000,\r\n  clickToClose: false,\r\n  cssAnimationStyle: \"from-right\",\r\n});\r\n\r\nconst MAIN_POINT = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"4bbdf91bf3cd1196a212f990d3c9214f\";\r\n\r\nasync function fetchMovies(currentRequestUrl, searchParams = \"\") {\r\n  const params = {\r\n    api_key: API_KEY,\r\n    language: \"en-US\",\r\n    ...searchParams,\r\n  };\r\n\r\n  const stringParams = new URLSearchParams(params).toString(); // перетворення params у рядок з відповідними символами & і =\r\n\r\n  // http запит\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      Authorization:\r\n        \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0YmJkZjkxYmYzY2QxMTk2YTIxMmY5OTBkM2M5MjE0ZiIsIm5iZiI6MTcyNTUzNDM4Mi41ODIyMjQsInN1YiI6IjY0MjUzOTUyOTYwY2RlMDA3NzExYWJmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7FvFAlAMJ1N-rqiBwKrtNZfTcOAUsU-k3s61vxQmHGw\",\r\n    },\r\n  };\r\n\r\n  const URL = `${MAIN_POINT}/${currentRequestUrl}?${stringParams}`;\r\n  try {\r\n    const receivedMovies = await axios.get(URL, options);\r\n\r\n    return receivedMovies;\r\n  } catch (error) {\r\n    Notify.failure(error.message);\r\n  }\r\n}\r\n\r\nexport default fetchMovies;\r\n","// https://api.themoviedb.org/3/configuration\r\nconst imagesConfigurations = {\r\n  images: {\r\n    base_url: \"http://image.tmdb.org/t/p/\",\r\n    secure_base_url: \"https://image.tmdb.org/t/p/\",\r\n    backdrop_sizes: [\"w300\", \"w780\", \"w1280\", \"original\"],\r\n    logo_sizes: [\"w45\", \"w92\", \"w154\", \"w185\", \"w300\", \"w500\", \"original\"],\r\n    poster_sizes: [\"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", \"original\"],\r\n    profile_sizes: [\"w45\", \"w185\", \"h632\", \"original\"],\r\n    still_sizes: [\"w92\", \"w185\", \"w300\", \"original\"],\r\n  },\r\n\r\n  change_keys: [\r\n    \"adult\",\r\n    \"air_date\",\r\n    \"also_known_as\",\r\n    \"alternative_titles\",\r\n    \"biography\",\r\n    \"birthday\",\r\n    \"budget\",\r\n    \"cast\",\r\n    \"certifications\",\r\n    \"character_names\",\r\n    \"created_by\",\r\n    \"crew\",\r\n    \"deathday\",\r\n    \"episode\",\r\n    \"episode_number\",\r\n    \"episode_run_time\",\r\n    \"freebase_id\",\r\n    \"freebase_mid\",\r\n    \"general\",\r\n    \"genres\",\r\n    \"guest_stars\",\r\n    \"homepage\",\r\n    \"images\",\r\n    \"imdb_id\",\r\n    \"languages\",\r\n    \"name\",\r\n    \"network\",\r\n    \"origin_country\",\r\n    \"original_name\",\r\n    \"original_title\",\r\n    \"overview\",\r\n    \"parts\",\r\n    \"place_of_birth\",\r\n    \"plot_keywords\",\r\n    \"production_code\",\r\n    \"production_companies\",\r\n    \"production_countries\",\r\n    \"releases\",\r\n    \"revenue\",\r\n    \"runtime\",\r\n    \"season\",\r\n    \"season_number\",\r\n    \"season_regular\",\r\n    \"spoken_languages\",\r\n    \"status\",\r\n    \"tagline\",\r\n    \"title\",\r\n    \"translations\",\r\n    \"tvdb_id\",\r\n    \"tvrage_id\",\r\n    \"type\",\r\n    \"video\",\r\n    \"videos\",\r\n  ],\r\n};\r\n\r\nexport default imagesConfigurations;\r\n"],"names":["_ref","list","location","useLocation","linkTo","pathname","includes","images","imagesConfigurations","_jsx","_Fragment","children","map","_ref2","id","poster_path","original_language","original_title","release_date","vote_average","_jsxs","src","secure_base_url","noPoster","alt","Link","to","state","from","Notify","init","width","position","timeout","clickToClose","cssAnimationStyle","movies","setMovies","useState","useEffect","async","result","fetchMovies","data","results","length","warning","fetchPopularMovies","error","failure","message","MoviesList","currentRequestUrl","params","api_key","language","arguments","undefined","options","method","headers","accept","Authorization","URL","URLSearchParams","toString","axios","get","base_url","backdrop_sizes","logo_sizes","poster_sizes","profile_sizes","still_sizes","change_keys"],"sourceRoot":""}