{"version":3,"file":"static/js/433.ddb0d7a8.chunk.js","mappings":"iNAgEA,QAnDA,WAAyB,IAADA,EAAAC,EACtB,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAEnCC,EAAAA,EAAAA,YAAU,MAERC,iBACE,MAAMC,EAAoB,SAASP,IAE7BQ,QAAwBC,EAAAA,EAAAA,GAAYF,GAC1CJ,EAASK,EAAgBE,KAC3B,CAEAC,EAAoB,GACnB,CAACX,IAEJ,MAAMY,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAA2B,QAArBjB,EAAe,QAAfC,EAACa,EAASI,aAAK,IAAAjB,OAAA,EAAdA,EAAgBkB,YAAI,IAAAnB,EAAAA,EAAI,MAE1C,OAAEoB,GAAWC,EAAAA,GAEb,SAAEC,EAAQ,eAAEC,EAAc,cAAEC,EAAa,SAAEC,GAAarB,EAC9D,OACEsB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAIf,EAASgB,QAAQJ,SAAC,uGAC5BC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGI,KAAMX,EAASM,SAAEL,OAEtBM,EAAAA,EAAAA,KAAA,OACEK,IACEV,EACI,GAAGJ,EAAOe,uBAAuBX,IACjCY,EAENC,IAAK,aAAad,UAClBe,OAAQ,OAEVZ,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,cACSC,EAAAA,EAAAA,KAAA,QAAAD,SAAOH,QAGnBI,EAAAA,EAAAA,KAACU,EAAAA,GAAO,CAACR,GAAI,OAAOH,SAAC,UACrBC,EAAAA,EAAAA,KAACU,EAAAA,GAAO,CAACR,GAAI,UAAUH,SAAC,aAExBC,EAAAA,EAAAA,KAACW,EAAAA,SAAQ,CAAAZ,UACPC,EAAAA,EAAAA,KAACY,EAAAA,GAAM,QAIf,C,sDC3DAC,EAAAA,OAAOC,KAAK,CACVC,MAAO,QACPC,SAAU,eAEVC,cAAc,EACdC,kBAAmB,eAmCrB,QA7BAvC,eAA2BC,GACzB,MAAMuC,EAAS,CACbC,QAJY,mCAKZC,SAAU,WAH4CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAUrDG,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+PAIAC,EAAM,gCAAiBlD,KAZR,IAAImD,gBAAgBZ,GAAQa,aAajD,IAGE,aAF6BC,EAAAA,EAAMC,IAAIJ,EAAKL,EAG9C,CAAE,MAAOU,GACPtB,EAAAA,OAAOuB,QAAQD,EAAME,QACvB,CACF,C,gCCxCA,MAoEA,EApE6B,CAC3B9C,OAAQ,CACN+C,SAAU,6BACVhC,gBAAiB,8BACjBiC,eAAgB,CAAC,OAAQ,OAAQ,QAAS,YAC1CC,WAAY,CAAC,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,YAC3DC,aAAc,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,YAC9DC,cAAe,CAAC,MAAO,OAAQ,OAAQ,YACvCC,YAAa,CAAC,MAAO,OAAQ,OAAQ,aAGvCC,YAAa,CACX,QACA,WACA,gBACA,qBACA,YACA,WACA,SACA,OACA,iBACA,kBACA,aACA,OACA,WACA,UACA,iBACA,mBACA,cACA,eACA,UACA,SACA,cACA,WACA,SACA,UACA,YACA,OACA,UACA,iBACA,gBACA,iBACA,WACA,QACA,iBACA,gBACA,kBACA,uBACA,uBACA,WACA,UACA,UACA,SACA,gBACA,iBACA,mBACA,SACA,UACA,QACA,eACA,UACA,YACA,OACA,QACA,U","sources":["components/MovieDetails.jsx","services/fetchMovies.js","services/imagesConfigurations.js"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  NavLink,\r\n  Outlet,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\n\r\nimport fetchMovies from \"services/fetchMovies\";\r\nimport imagesConfigurations from \"services/imagesConfigurations\";\r\nimport noPoster from \"imgs/noPoster.webp\";\r\n\r\nfunction MovieDetails() {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // http запит за поточним фільмом\r\n    async function fetchPopularMovies() {\r\n      const currentRequestUrl = `movie/${movieId}`;\r\n\r\n      const getCurrentMovie = await fetchMovies(currentRequestUrl);\r\n      setMovie(getCurrentMovie.data);\r\n    }\r\n\r\n    fetchPopularMovies();\r\n  }, [movieId]);\r\n\r\n  const location = useLocation();\r\n  const backLink = useRef(location.state?.from ?? \"/\");\r\n\r\n  const { images } = imagesConfigurations;\r\n\r\n  const { homepage, original_title, backdrop_path, overview } = movie;\r\n  return (\r\n    <>\r\n      <Link to={backLink.current}>Повернутись назад</Link>\r\n      <h2>\r\n        <a href={homepage}>{original_title}</a>\r\n      </h2>\r\n      <img\r\n        src={\r\n          backdrop_path\r\n            ? `${images.secure_base_url}w500/${backdrop_path}`\r\n            : noPoster\r\n        }\r\n        alt={`Poster of ${original_title} movie`}\r\n        height={500}\r\n      />\r\n      <p>\r\n        Overview: <span>{overview}</span>\r\n      </p>\r\n\r\n      <NavLink to={\"cast\"}>Cast</NavLink>\r\n      <NavLink to={\"reviews\"}>Reviews</NavLink>\r\n\r\n      <Suspense>\r\n        <Outlet />\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n","import axios from \"axios\";\r\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\r\n\r\nNotify.init({\r\n  width: \"300px\",\r\n  position: \"right-bottom\",\r\n  // timeout: 2000,\r\n  clickToClose: false,\r\n  cssAnimationStyle: \"from-right\",\r\n});\r\n\r\nconst MAIN_POINT = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"4bbdf91bf3cd1196a212f990d3c9214f\";\r\n\r\nasync function fetchMovies(currentRequestUrl, searchParams = \"\") {\r\n  const params = {\r\n    api_key: API_KEY,\r\n    language: \"en-US\",\r\n    ...searchParams,\r\n  };\r\n\r\n  const stringParams = new URLSearchParams(params).toString(); // перетворення params у рядок з відповідними символами & і =\r\n\r\n  // http запит\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      Authorization:\r\n        \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0YmJkZjkxYmYzY2QxMTk2YTIxMmY5OTBkM2M5MjE0ZiIsIm5iZiI6MTcyNTUzNDM4Mi41ODIyMjQsInN1YiI6IjY0MjUzOTUyOTYwY2RlMDA3NzExYWJmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7FvFAlAMJ1N-rqiBwKrtNZfTcOAUsU-k3s61vxQmHGw\",\r\n    },\r\n  };\r\n\r\n  const URL = `${MAIN_POINT}/${currentRequestUrl}?${stringParams}`;\r\n  try {\r\n    const receivedMovies = await axios.get(URL, options);\r\n\r\n    return receivedMovies;\r\n  } catch (error) {\r\n    Notify.failure(error.message);\r\n  }\r\n}\r\n\r\nexport default fetchMovies;\r\n","// https://api.themoviedb.org/3/configuration\r\nconst imagesConfigurations = {\r\n  images: {\r\n    base_url: \"http://image.tmdb.org/t/p/\",\r\n    secure_base_url: \"https://image.tmdb.org/t/p/\",\r\n    backdrop_sizes: [\"w300\", \"w780\", \"w1280\", \"original\"],\r\n    logo_sizes: [\"w45\", \"w92\", \"w154\", \"w185\", \"w300\", \"w500\", \"original\"],\r\n    poster_sizes: [\"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", \"original\"],\r\n    profile_sizes: [\"w45\", \"w185\", \"h632\", \"original\"],\r\n    still_sizes: [\"w92\", \"w185\", \"w300\", \"original\"],\r\n  },\r\n\r\n  change_keys: [\r\n    \"adult\",\r\n    \"air_date\",\r\n    \"also_known_as\",\r\n    \"alternative_titles\",\r\n    \"biography\",\r\n    \"birthday\",\r\n    \"budget\",\r\n    \"cast\",\r\n    \"certifications\",\r\n    \"character_names\",\r\n    \"created_by\",\r\n    \"crew\",\r\n    \"deathday\",\r\n    \"episode\",\r\n    \"episode_number\",\r\n    \"episode_run_time\",\r\n    \"freebase_id\",\r\n    \"freebase_mid\",\r\n    \"general\",\r\n    \"genres\",\r\n    \"guest_stars\",\r\n    \"homepage\",\r\n    \"images\",\r\n    \"imdb_id\",\r\n    \"languages\",\r\n    \"name\",\r\n    \"network\",\r\n    \"origin_country\",\r\n    \"original_name\",\r\n    \"original_title\",\r\n    \"overview\",\r\n    \"parts\",\r\n    \"place_of_birth\",\r\n    \"plot_keywords\",\r\n    \"production_code\",\r\n    \"production_companies\",\r\n    \"production_countries\",\r\n    \"releases\",\r\n    \"revenue\",\r\n    \"runtime\",\r\n    \"season\",\r\n    \"season_number\",\r\n    \"season_regular\",\r\n    \"spoken_languages\",\r\n    \"status\",\r\n    \"tagline\",\r\n    \"title\",\r\n    \"translations\",\r\n    \"tvdb_id\",\r\n    \"tvrage_id\",\r\n    \"type\",\r\n    \"video\",\r\n    \"videos\",\r\n  ],\r\n};\r\n\r\nexport default imagesConfigurations;\r\n"],"names":["_location$state$from","_location$state","movieId","useParams","movie","setMovie","useState","useEffect","async","currentRequestUrl","getCurrentMovie","fetchMovies","data","fetchPopularMovies","location","useLocation","backLink","useRef","state","from","images","imagesConfigurations","homepage","original_title","backdrop_path","overview","_jsxs","_Fragment","children","_jsx","Link","to","current","href","src","secure_base_url","noPoster","alt","height","NavLink","Suspense","Outlet","Notify","init","width","position","clickToClose","cssAnimationStyle","params","api_key","language","arguments","length","undefined","options","method","headers","accept","Authorization","URL","URLSearchParams","toString","axios","get","error","failure","message","base_url","backdrop_sizes","logo_sizes","poster_sizes","profile_sizes","still_sizes","change_keys"],"sourceRoot":""}